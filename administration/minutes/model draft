object Course
	components: p:Page* and r:Roster and privateClass:bool and text:string* and chatRoom:string;
	operations: AddPage and RemovePage and SetPrivate and EditCourseText; 
end Course; 

operation AddPage
end AddPage;

operation RemovePage
end RemovePage;

operation SetPrivate
end SetPrivate;

object Page
	compenents: prevPage and nextPage and prereq;
end Page;

object Lesson implements Page
	components: STring text* and String code* and Image* andPage*;
end Lesson;

object Quiz implements Page
	components: Question* and String text*;
end Quiz;

object Question
	componets: String text and int value;
end Question;

object MultipleChoiceQuestion implements QUestion
	components: string answer+ and int correct+;
end MultipleChoiceQuestion;

object Roster
	components: (User, Permissions)*;
end Roster; 

object User
	components: boolean isInstructor and String userName and String password Course enrolled* and (Lesson, Quiz, int score)* (work in progress);
end User;

object Permissions
	components: bool view and bool edit and bool manage and bool stats;
end Permissions;



OPERATIONS LIST:

Jon - user related

addUser
removeUser
setUserPermissions
updateRoster

Russell 

login
logout

Matt

createCourse
removeCourse
createLesson
removeLesson
removePage

Evan

createQuiz
addQuestion
removeQuestion

James

clearStatistics
displayStats
getStats

operation getNextPage
   inputs: Page;
   outputs: Page;
   description: (*Takes in a Page, and returns the next logical page.*);
end getNextPage;

operation getPrevPage
   inputs: Page;
   outputs: Page;
   description: (*Takes in a Page, and returns the previous logical page.*);
end getPrevPage;

operation displayPage
   inputs: Page;
   outputs: String;
   description:  (*Takes in a page and returns the content to display *);
end displayPage;

operation movePage;
   inputs: Page, Page;
   outputs: bool;
   description: (*Takes in two pages, the page to move and the page to 
                 place the moved page after, and moves the first page to be
                 the "next" of the second Page.  Returns boolean indicating 
                 success *);
end movePage;

//RUSSELL MEZZETTA

operation login
	inputs: username, password, database;
	outputs: ...;
	description: (* Takes in username and password then checks server to see if there is a
						match. If so then it grants access *);
end login;
	
operation logout
	inputs: userdata, database;
	outputs: ...;
	description: (* saves all user data to the server *);
end logout;
